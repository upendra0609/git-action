# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: upendra0609/demo-service
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: build
    runs-on: [self-hosted]  # Ensure this matches your self-hosted runner's labels
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Assuming you might need files from your repo

      - name: Login to Docker Hub (if needed)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: env.DOCKER_HUB_PRIVATE == 'true'  # Only run this step if your image is private

      - name: Pull Image from Docker Hub
        run: docker pull upendra0609/demo-service

      - name: Check if old container exists
        id: old-container
        run: |
          if docker inspect demo-service-container; then
            echo "OLD_CONTAINER_EXISTS=true" >> $GITHUB_ENV
          else
            echo "OLD_CONTAINER_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Delete old container
        if: env.OLD_CONTAINER_EXISTS == 'true'
        run: docker rm -f demo-service-container

      - name: Run Docker container
        run: docker run -d -i -t -p 8080:8080 --name demo-service-container upendra0609/demo-service